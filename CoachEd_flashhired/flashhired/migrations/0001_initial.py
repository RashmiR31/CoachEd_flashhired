# Generated by Django 3.1.3 on 2021-10-28 14:23

import builtins
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_candidate', models.BooleanField(default=False)),
                ('is_recruiter', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('user', models.OneToOneField(default=builtins.id, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='flashhired.user')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('dob', models.DateField(default=django.utils.timezone.now)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=25)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('email_id', models.EmailField(max_length=254)),
                ('alternate_email_id', models.EmailField(max_length=254)),
                ('current_address', models.TextField()),
                ('permanent_address', models.TextField()),
                ('profile_pic', models.ImageField(null=True, upload_to='candidate/profile_pic/')),
                ('recent_degree', models.CharField(max_length=10)),
                ('recent_stream', models.CharField(max_length=255)),
                ('recent_college_name', models.CharField(max_length=255)),
                ('recent_yop', models.DateField(default=django.utils.timezone.now)),
                ('recent_cgpa_equivalent', models.DecimalField(decimal_places=2, max_digits=4)),
                ('recent_marks_card', models.FileField(upload_to='candidate/recent/marks_card/')),
                ('pu_combination', models.CharField(max_length=100)),
                ('pu_college_name', models.CharField(max_length=100)),
                ('pu_yop', models.DateField(default=django.utils.timezone.now)),
                ('pu_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('pu_marks_card', models.FileField(upload_to='candidate/pu/marks_card/')),
                ('tenth_school_name', models.CharField(max_length=100)),
                ('tenth_yop', models.DateField(default=django.utils.timezone.now)),
                ('tenth_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('tenth_marks_card', models.FileField(upload_to='candidate/tenth/marks_card/')),
            ],
        ),
        migrations.CreateModel(
            name='Recruiter',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='flashhired.user')),
                ('name', models.CharField(max_length=255)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=25)),
                ('work_email', models.EmailField(blank=True, max_length=254)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('dob', models.DateField()),
                ('company_name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('experience', models.IntegerField()),
                ('auth_doc', models.FileField(upload_to='recruiter/auth_doc/')),
                ('profile_pic', models.ImageField(upload_to='recruiter/profile_pic/')),
            ],
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=100)),
                ('duration', models.IntegerField()),
                ('work_description', models.TextField()),
                ('supporting_doc', models.FileField(null=True, upload_to='candidate/work_doc/')),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flashhired.candidate')),
            ],
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_type', models.CharField(choices=[('fulltime', 'Full Time'), ('internship', 'Internship'), ('contract', 'Contract')], max_length=25)),
                ('job_title', models.CharField(max_length=255)),
                ('functional_area', models.CharField(max_length=255)),
                ('jd', models.TextField()),
                ('required_skills', models.TextField()),
                ('required_experience', models.IntegerField()),
                ('required_education', models.TextField()),
                ('salary', models.IntegerField()),
                ('is_negotiable', models.BooleanField(default=False)),
                ('job_location', models.TextField()),
                ('date_posted', models.DateField(default=django.utils.timezone.now)),
                ('upload_doc', models.FileField(upload_to='recruiter/jobs/docs/')),
                ('recruiter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flashhired.recruiter')),
            ],
        ),
        migrations.CreateModel(
            name='Accomplishments',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('certificate_name', models.CharField(max_length=255, null=True)),
                ('certificate_issued_by', models.CharField(max_length=100, null=True)),
                ('certificate_issue_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('certificate_link', models.CharField(max_length=5000, null=True)),
                ('certificate_doc', models.FileField(upload_to='candidate/certificates/')),
                ('award_name', models.CharField(max_length=255)),
                ('award_issued_by', models.CharField(max_length=255)),
                ('candidate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='flashhired.candidate')),
            ],
        ),
    ]
